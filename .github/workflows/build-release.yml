name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: win
            arch: x64
          - os: macos-latest
            platform: mac
            arch: universal
          - os: ubuntu-latest
            platform: linux
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install native dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Lint code
        run: npm run lint

      # Windows specific build
      - name: Build Windows packages
        if: matrix.os == 'windows-latest'
        run: |
          npm run package:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # macOS specific build  
      - name: Build macOS packages
        if: matrix.os == 'macos-latest'
        run: |
          npm run package:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Linux specific build
      - name: Build Linux packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run package:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            dist-packages/*.exe
            dist-packages/*.dmg
            dist-packages/*.pkg
            dist-packages/*.AppImage
            dist-packages/*.deb
            dist-packages/*.rpm
            dist-packages/*.snap
            dist-packages/*.tar.gz
            dist-packages/*.zip
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          release_name: YouTube Playlist Manager ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## What's New
            
            ### Features
            - Comprehensive YouTube playlist management
            - Advanced video downloading with quality selection
            - Offline video access and organization
            - Batch download capabilities
            - Video format conversion with FFmpeg
            - Duplicate detection system
            - Cross-platform support
            
            ### Download Options
            
            **Windows:**
            - `.exe` - NSIS Installer (Recommended)
            - `-portable.exe` - Portable version
            - `.zip` - Archive format
            
            **macOS:**
            - `.dmg` - Disk Image (Recommended)
            - `.pkg` - Package Installer
            - `.zip` - Archive format
            
            **Linux:**
            - `.AppImage` - Universal Linux app (Recommended)
            - `.deb` - Debian/Ubuntu package
            - `.rpm` - Red Hat/Fedora package
            - `.snap` - Snap package
            - `.tar.gz` - Archive format
            
            ### System Requirements
            - **Windows:** Windows 10 or later
            - **macOS:** macOS 10.14 (Mojave) or later
            - **Linux:** Modern distribution with glibc 2.17+
            
            ### Installation Notes
            - First-time installation may trigger antivirus warnings (false positive)
            - macOS users may need to allow installation from unidentified developers
            - Linux users should make AppImage executable: `chmod +x *.AppImage`
            
            For support and documentation, visit our [GitHub repository](https://github.com/youtube-playlist-manager/youtube-playlist-manager).
          draft: false
          prerelease: ${{ contains(github.event.inputs.version, 'beta') || contains(github.event.inputs.version, 'alpha') }}

      - name: Upload Windows NSIS Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/win-x64/YouTube Playlist Manager Setup.exe
          asset_name: YouTube-Playlist-Manager-Setup-${{ github.event.inputs.version || github.ref_name }}.exe
          asset_content_type: application/x-msdownload

      - name: Upload Windows Portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/win-x64/YouTube Playlist Manager Portable.exe
          asset_name: YouTube-Playlist-Manager-Portable-${{ github.event.inputs.version || github.ref_name }}.exe
          asset_content_type: application/x-msdownload

      - name: Upload macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/mac-universal/YouTube Playlist Manager.dmg
          asset_name: YouTube-Playlist-Manager-${{ github.event.inputs.version || github.ref_name }}.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload Linux AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux-x64/YouTube Playlist Manager.AppImage
          asset_name: YouTube-Playlist-Manager-${{ github.event.inputs.version || github.ref_name }}.AppImage
          asset_content_type: application/x-executable

      - name: Upload Linux DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux-x64/youtube-playlist-manager.deb
          asset_name: youtube-playlist-manager-${{ github.event.inputs.version || github.ref_name }}.deb
          asset_content_type: application/vnd.debian.binary-package

  update-release-info:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Update latest release info
        run: |
          echo "Release ${{ github.event.inputs.version || github.ref_name }} published successfully"
          echo "Packages are now available for download"
